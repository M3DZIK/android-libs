import{_ as s,c as n,o as a,a as e}from"./app-TIUYbXK-.js";const t={},i=e(`<h1 id="permission" tabindex="-1"><a class="header-anchor" href="#permission"><span>Permission</span></a></h1><p>Checks if the application has granted permission for the requested permission.</p><ul><li>If the permission is already granted, it calls the [onGranted] block.</li><li>If the permission is not granted, it calls the [onDenied] block with a requester function that launches the permission request.</li></ul><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="line"><span class="token annotation builtin">@Compose</span></span>
<span class="line"><span class="token keyword">fun</span> <span class="token function">RequestCameraPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Permission</span><span class="token punctuation">(</span></span>
<span class="line">        permission <span class="token operator">=</span> Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>CAMERA<span class="token punctuation">,</span></span>
<span class="line">        onDenied <span class="token operator">=</span> <span class="token punctuation">{</span> requestPermission<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit <span class="token operator">-&gt;</span></span>
<span class="line">            <span class="token function">requestPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Camera permission is required&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        onGranted <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Camera permission is granted&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),p=[i];function o(l,c){return a(),n("div",null,p)}const u=s(t,[["render",o],["__file","permission.html.vue"]]),d=JSON.parse('{"path":"/compose/permission.html","title":"Permission","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1718816775000,"contributors":[{"name":"Oskar Karpi≈Ñski","email":"me@medzik.dev","commits":1}]},"filePathRelative":"compose/permission.md"}');export{u as comp,d as data};
